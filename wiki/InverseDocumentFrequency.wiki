#summary Describes the procedures used to calculate Inverse Document Frequencies

= Introduction =

TODO: Describe what idfs are useful for. 

= Questions =
Using term weighting, is there any problem for so many genes with so few generifs (60% are under 6)?

Should we use thesaurus? (liver/hepatic)

= Resources = 

If you need C++ stemming 
http://www.oleandersolutions.com/stemming.html

(how to search for a word in a field using sql)

 select * from generif where description like '%mutated%';

= Example = 

geneID = 39

Fully differentiated macrophages express ACAT2 in addition to ACAT1 under various pathologic conditions.

ACAT-1 transcripts predominate in human liver and ACAT-2 transcripts predominate in human duodenum and support the notion that ACAT-2 has an important regulatory role in liver and intestine.

ACAT2 provided the major cholesterol-esterifying activity in 3 of 4 human liver samples.

Data describe the high resolution structure of human cytosolic acetoacetyl-CoA thiolase (CT), both unliganded (at 2.3 angstroms resolution) and in complex with CoA (at 1.6 angstroms resolution).

transcription factors hepatic nuclear factor 1 (HNF1)alpha and beta play an important part in the regulation of the human acetyl-Coenzyme A acetyltransferase 2(ACAT2) promoter

The structural features of various sterols as substrates and/or activators of ACAT1 and ACAT2 in vitro are reported.

Elevated ACAT2 expression may serve as a new biomarker for certain form(s) of hepatocellular carcinoma.

Alternative splicing produces two human ACAT2 mRNA variants that encode the novel ACAT2 isoenzymes. Our findings might help to understand the regulation of the ACAT2 gene expression under certain physiological and pathological conditions.

histidine residues located at the active site are very crucial both for the catalytic activity of the enzyme and for distinguishing ACAT1 from ACAT2 with respect to enzyme catalysis and substrate specificity


== Expected results: ==

  * liver (hepatic)
  * cholesterol-esterifying(?)
  * ACAT1

we don't want:
  * ACAT2, since it is the gene symbol


= Procedures =

1 - Calculate N

{{{
sqlite> select count(*) from generif;
203263
}}}

... a better number:

{{{
sqlite> select count(distinct geneID) from generif;
34667
}}}

Since we are going to consider all generifs associated to a geneID as a different document

2 - Generate file containing all geneIDs that will be researched:

sqlite3 gene.db > geneIDs.txt

sqlite> select distinct geneID as g from generif order by g;

3- Create termWeighter.cpp

{{{

#include <fstream>
#include <string>
#include <iostream>
#include <algorithm>
#include <vector>
#include <sqlite3.h>
#include <map>
#include <cmath>

#define DOCUMENTS 34667

using namespace std;

map<int,string> geneCluster;
map<int, map<string,int> > geneIDwordFrequency;
map<string, int> dictionary;
map<string,double> idf;


//class used to find most important terms
class termSort{
public:
  string word;
  double weight;
};

bool operator<(const termSort& a, const termSort& b) {
  if(fabs( a.weight - b.weight) < 0.000001){
    return a.word < b.word;
  }
  else
    return a.weight > b.weight;
}

//class used to sort idfs
class idfSort{
public:
  string word;
  double idf;
  int ni;
};

//
bool operator<(const idfSort& a, const idfSort& b) {
  if(fabs( a.idf - b.idf) < 0.000001){
    return a.word < b.word;
  }
  else
    return a.idf < b.idf;
}

string makeLower(string s){
  string sBuffer = s;
  transform( sBuffer.begin(), sBuffer.end(), sBuffer.begin(),::tolower );
  return sBuffer;
}

static int callback(void *NotUsed, int argc, char **argv, char **azColName){
  int id;
  sscanf(argv[0],"%d",&id);
  geneCluster[id]+=argv[1];
  return 0;
}


//a simple Tokenizer... all words are lowered here
void Tokenize(const string& str,
                      vector<string>& tokens,
                      const string& delimiters = " ")
{
    // Skip delimiters at beginning.
    string::size_type lastPos = str.find_first_not_of(delimiters, 0);
    // Find first "non-delimiter".
    string::size_type pos     = str.find_first_of(delimiters, lastPos);

    while (string::npos != pos || string::npos != lastPos)
    {
        // Found a token, add it to the vector.
      tokens.push_back(makeLower(str.substr(lastPos, pos - lastPos)));
        // Skip delimiters.  Note the "not_of"
        lastPos = str.find_first_not_of(delimiters, pos);
        // Find next "non-delimiter"
        pos = str.find_first_of(delimiters, lastPos);
    }
}


//separates descriptions per geneID in a global map
void clusterDocuments(){
  printf("Clustering documents\n");

  sqlite3 *db;
  char* zErrMsg = 0;
  char temp[300];
  int rc = sqlite3_open("gene.db",&db);
  if(rc) {printf("bugged\n");return;}  

  sprintf(temp,"select geneID, description from generif order by geneID;");
  rc = sqlite3_exec(db,temp, callback, 0, &zErrMsg);
  if( rc!=SQLITE_OK){
    fprintf(stderr, "SQL error: %s\n",zErrMsg);
    fprintf(stderr, "Blamed string: %s\n",temp);
    sqlite3_free(zErrMsg);
  }

}





//this function also loads the dictionary with words
void countFrequencies(){
  printf("Counting frequencies\n");
  map<int,string>::iterator it;
  for(it = geneCluster.begin();it!=geneCluster.end();it++){
    int geneId = (*it).first;
    string descriptions = (*it).second;
    vector<string> tokens;

    map<string,int> tempMap; //this map is used to calculate ni
    

    Tokenize(descriptions,tokens," :.,()");
    for(int i=0;i<tokens.size();i++){
      tempMap[tokens[i]]=1;

      if( geneIDwordFrequency[geneId].find(tokens[i]) == geneIDwordFrequency[geneId].end()){
	//doesn't exist 
	geneIDwordFrequency[geneId][tokens[i]]=1;
      }
      else{
	//increase
	geneIDwordFrequency[geneId][tokens[i]]++;
      }
    }    

    //load dictionary
    map<string,int>::iterator tit;
    for(tit = tempMap.begin();tit!=tempMap.end();tit++){
      if( dictionary.find( (*tit).first )!= dictionary.end()){
	dictionary[ (*tit).first ]++;
      }
      else{
	dictionary[ (*tit).first ] = 1;
      }
    }
  }
}

void calculateIDF(){
  printf("Calculating idfs...\n");
  map<string,int>::iterator it;
  vector<idfSort> idfs;
  for(it = dictionary.begin();it!=dictionary.end();it++){
    string word = (*it).first;
    int ni = (*it).second;
    //using formula from page 653 of Speech and Language Processing Daniel Jurafsky
    idf[word] = log( (double) DOCUMENTS / ni);       
    idfSort temp;
    temp.word = word;
    temp.idf = idf[word];
    temp.ni = ni;
    idfs.push_back(temp);
    
  }
  sort(idfs.begin(),idfs.end());
  /*
  printf("Word                                 idf   #of documents\n");
  for(int i=0;i<idfs.size();i++){
    printf("%-36s %5.3lf  %3d\n",idfs[i].word.c_str(),idfs[i].idf,idfs[i].ni);
    }*/
  
  
  
}

void printNi(){
  map<string,int>::iterator it;
  for(it = dictionary.begin();it!=dictionary.end();it++){
    printf("%s = %d\n", (*it).first.c_str(),(*it).second);
  }
}

void calculateTfIdfWeight(){
  printf("Calculating tf * idf weighting...\n");


  map<int, map<string,int> >::iterator git;
  for(git = geneIDwordFrequency.begin();git!=geneIDwordFrequency.end();git++){
    map<string,double> termWeight;
    vector<termSort> termVector;

    map<string,int>::iterator wit;
    for(wit = (*git).second.begin();wit != (*git).second.end(); wit++){
      string term = (*wit).first;
      int termFrequency = (*wit).second;
      double termIDF = idf[term];
      termWeight[term] = termFrequency * termIDF;
      termSort temp;
      temp.word = term;
      temp.weight = termWeight[term];
      termVector.push_back(temp);      
    }	
    sort(termVector.begin(),termVector.end());
    printf("Gene %d\n",(*git).first);
    for(int i=0;i<termVector.size();i++){
      printf("%-20s %5.3lf\n",termVector[i].word.c_str(),termVector[i].weight);
    }
  }  
}

int main(){

  clusterDocuments(); //loads geneCluster
  countFrequencies(); //loads geneIDwordFrequency from geneCluster... 
                      //makes code easier to read although it could be 
                      //done all at once
  calculateIDF();

  calculateTfIdfWeight();

  //printNi();
}


}}}

= Results = 

The words, idf's, and number of times each word appear in the generifs are shown in the following 9MB file [http://genequad.googlecode.com/svn/wiki/idfs.txt IDFs]


= GeneQuad Results = 

Results for a few genes: 

{{{
Gene 39
acat2                70.330
acat1                23.666
acat-2               18.134
predominate          16.513
resolution           12.871
angstroms            12.685
human                11.687
cholesterol-esterifying 10.454
liver                9.830
acetoacetyl-coa      9.760
acat-1               9.355
certain              9.220
thiolase             8.844
transcripts          8.388
acetyl-coenzyme      8.056
various              8.048
hnf1                 7.745
conditions           7.424
sterols              7.409
promoterthe          7.158
under                7.023
distinguishing       7.020
isoenzymes           7.020
duodenum             6.988
unliganded           6.843
coa                  6.790
ct                   6.647
enzyme               6.524
understand           6.483
biomarker            6.097
pathologic           5.910
histidine            5.858
acetyltransferase    5.848
notion               5.848
3                    5.682
catalysis            5.650
encode               5.548
respect              5.443
activators           5.436
at                   5.394
produces             5.300
help                 5.266
fully                5.140
provided             5.092
samples              4.998
intestine            4.920
pathological         4.777
differentiated       4.750
hepatocellular       4.607
2                    4.535
cytosolic            4.524
very                 4.452
substrates           4.406
features             4.390
1                    4.331
serve                4.206
important            4.109
regulation           4.067
both                 4.015
specificity          4.000
hepatic              3.986
6                    3.923
addition             3.914
macrophages          3.908
express              3.873
splicing             3.865
catalytic            3.863
located              3.846
alternative          3.808
variants             3.780
describe             3.733
elevated             3.711
s                    3.657
activity             3.602
physiological        3.594
carcinoma            3.566
crucial              3.532
and/or               3.500
structural           3.481
reported             3.460
substrate            3.450
our                  3.448
residues             3.387
support              3.386
beta                 3.255
4                    3.252
part                 3.167
alpha                3.164
active               3.149
vitro                3.111
factors              3.078
form                 3.049
new                  3.031
major                3.003
as                   2.989
findings             2.977
high                 2.967
are                  2.965
might                2.914
regulatory           2.876
site                 2.857
nuclear              2.829
an                   2.811
for                  2.806
the                  2.734
and                  2.603
structure            2.580
expression           2.485
two                  2.470
in                   2.456
mrna                 2.431
transcription        2.391
play                 2.335
factor               2.213
novel                2.159
complex              2.140
to                   2.122
data                 2.112
has                  1.990
with                 1.989
from                 1.731
of                   1.722
that                 1.663
may                  1.507
gene                 1.466
role                 1.277
a                    1.073

Gene 40
loopasic2            10.454
asic2a               9.355
amiloride-sensitive  8.662
connected            6.191
termini              6.163
consists             6.035
carboxyl             5.650
glioma               5.140
subtype              5.069
current              4.826
transmembrane        4.274
large                3.803
migration            3.429
extracellular        3.426
amino                3.360
surface              3.255
domains              3.245
intracellular        3.224
inhibits             3.196
two                  2.470
cells                1.447
expression           1.243
by                   1.046
and                  0.868
a                    0.537
the                  0.497
of                   0.431

Gene 41
asic1a               17.015
+                    11.759
acid-induced         11.580
bnac2asics           10.454
ibuprofen            10.454
na                   10.157
acid-gated           9.760
asic1a/2a            9.760
current              9.652
asics                9.355
-gated               9.067
asic1                8.508
vr1                  7.969
nociceptors          7.814
adenoid              7.681
isotypes             7.409
nociception          7.235
elevates             6.790
sensors              6.669
extremely            6.393
fear                 6.359
anxiety              6.310
cftr                 6.191
contributor          6.097
participation        5.771
cystic               5.674
feature              5.484
currents             5.330
pain                 5.306
acidic               5.207
altering             5.111
wild                 5.092
cutaneous            5.088
characteristic       4.973
kinetics             4.944
pkc                  4.815
observations         4.787
overall              4.737
carcinomas           4.717
disorders            4.628
abnormal             4.290
mainly               4.251
participates         4.215
channels             4.122
h                    3.931
strongly             3.721
conditions           3.712
studies              3.533
under                3.511
leading              3.436
extracellular        3.426
contributes          3.197
part                 3.167
multiple             3.141
significant          3.075
acid                 2.895
contribute           2.839
to                   2.829
mediated             2.793
type                 2.724
functional           2.508
interaction          2.337
show                 2.229
development          2.104
by                   2.093
these                2.085
is                   2.032
human                1.948
suggest              1.842
activity             1.801
may                  1.507
of                   1.507
the                  1.491
are                  1.482
cells                1.447
expression           1.243
in                   0.921
and                  0.868
a                    0.537
}}}

== Comments ==

Some words will need to be filtered: 

  * symbol name
  * measures (angstroms)
  * signals (maybe tokenize them?)

Are we losing important information somewhere?

TODO: stem words in C++